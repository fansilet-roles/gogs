#!/bin/env bash
# Backup and Restore Gogs Contents:
#
# This script creates gogs container volume backups and data backups
#
# * data backups are the backups created by gogs backup utility
# * volume backups are the backups of the container volume where data backups
# resides
#
# e.g: gogs container backup volume is gogs_bkp
# when running `podman exec gogs gogs backup --target /backup`
# this will create a zip backup file /backup directory. However the /backup
# directory is stored on gogs container volume `gogs_bkp`.
# The intention of this script is to backup both gogs data and the container
# volume.
#
# Some references of common issues can be found from bellow links:
# [Failed to restore in containers because of cross-device-link](https://github.com/gogs/gogs/issues/4339#issuecomment-358339037)
# [Backup and Restore rules](https://github.com/gogs/gogs/discussions/6876)

arg="$1"
arg2="$2"
arg3="$3"

case "$arg" in
  backup)
    container="${arg2}"
    podman exec --user git "${container}" ./gogs backup --target /backup
  ;;

  restore)
    # some clean-ups must be done in order to full restore gogs
    # the actions are:
    # 1. create the tmp directory to extract the temp zip avoiding the cross-device-link error
    # 2. clean the gogs-repositories to avoid permissions errors
    # 3. restore the full compressed backup
    # 4. find and remove all .bak directories avoiding it to be backup in the next backup
    # 5. restart gogs daemon
    # 6. remove the temporary restoration directory 
    container="${arg2}"
    file="${arg3}"
    podman exec --user git "${container}" bash -c "mkdir -p /data/tmp; \
      rm -rf /data/git/gogs-repositories; \
      /app/gogs/gogs restore --from ${file} -t /data/tmp/; \
      find /data -type d -name '*.bak' -exec rm -rf {} \+; \
      pkill -HUP gogs; \
      rm -rf /data/tmp"
  ;;

  volbkp)
    # create a tarball of the gogs_bkp volume
    # this will allow to save all backup files into the host
    volume="${arg2}"
    dest="${arg3}"
    bkpvol="${dest}/${volume}-$(date +%Y-%m-%d-%s).tar"
    podman volume export "${volume}" -o "${bkpvol}" && bzip2 "${bkpvol}"
    printf "Backup Volume Created: %s\n" "$(pwd)/${bkpvol}.bz2"
  ;;

  volrestore)
    # restore a volume backup tarball to the gogs container volume
    # 1. make sure to create the gogs_gogs_bkp first
    # 2. import the volume with volrestore command
    # 3. to list the backup files inside the volume run the list backups command
    volume="${arg2}"
    file="${arg3}"
    podman volume import "${volume}" "${file}" && printf "Backup Volume Restored!\n"
  ;;

  list)
    # list all backup files generated by gogs in the backup volume
    volume="${arg2}"
    printf "To restore those files use the path with /backup/file.zip\n"
    voldata=$(podman volume inspect "${volume}" --format "{{.Mountpoint}}")
    ls -lh --color "${voldata}"
  ;;
  
  *|help)
    echo -e "Usage:
    $0 backup container-name\t\t\t\t\t- Creates a zipped backup file in the /backup volume directory
    $0 restore container-name /backup/file.zip \t\t- Restore a backup from the specified path
    $0 volbkp volume-name path \t\t\t\t\t- Save the gogs backup volume as a tarball file in the host
    $0 volrestore volume-name file.tar.bz2 \t\t\t- Restore the gogs backup volume
    $0 list volume-name \t\t\t\t\t- List all backup files
    "
  ;;

esac
